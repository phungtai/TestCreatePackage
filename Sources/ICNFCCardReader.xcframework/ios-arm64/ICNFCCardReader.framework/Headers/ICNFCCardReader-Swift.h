#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.8.1 (swiftlang-5.8.0.124.5 clang-1403.0.22.11.100)
#ifndef ICNFCCARDREADER_SWIFT_H
#define ICNFCCARDREADER_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#if __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
#endif
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import AVFoundation;
@import CoreFoundation;
@import CoreMedia;
@import Foundation;
@import ObjectiveC;
@import UIKit;
#endif

#import <ICNFCCardReader/ICNFCCardReader.h>

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="ICNFCCardReader",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)
@class NSCoder;
@class UITouch;
@class UIEvent;

/// Lottie comes prepacked with a two Animated Controls, <code>AnimatedSwitch</code> and
/// <code>AnimatedButton</code>. Both of these controls are built on top of <code>AnimatedControl</code>
/// <code>AnimatedControl</code> is a subclass of <code>UIControl</code> that provides an interactive
/// mechanism for controlling the visual state of an animation in response to
/// user actions.
/// The <code>AnimatedControl</code> will show and hide layers depending on the current
/// <code>UIControl.State</code> of the control.
/// Users of <code>AnimationControl</code> can set a Layer Name for each <code>UIControl.State</code>.
/// When the state is change the <code>AnimationControl</code> will change the visibility
/// of its layers.
/// NOTE: Do not initialize directly. This is intended to be subclassed.
SWIFT_CLASS("_TtC15ICNFCCardReader15AnimatedControl")
@interface AnimatedControl : UIControl
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, getter=isEnabled) BOOL enabled;
@property (nonatomic, getter=isSelected) BOOL selected;
@property (nonatomic, getter=isHighlighted) BOOL highlighted;
@property (nonatomic, readonly) CGSize intrinsicContentSize;
- (BOOL)beginTrackingWithTouch:(UITouch * _Nonnull)touch withEvent:(UIEvent * _Nullable)event SWIFT_WARN_UNUSED_RESULT;
- (BOOL)continueTrackingWithTouch:(UITouch * _Nonnull)touch withEvent:(UIEvent * _Nullable)event SWIFT_WARN_UNUSED_RESULT;
- (void)endTrackingWithTouch:(UITouch * _Nullable)touch withEvent:(UIEvent * _Nullable)event;
- (void)cancelTrackingWithEvent:(UIEvent * _Nullable)event;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


/// An interactive button that plays an animation when pressed.
SWIFT_CLASS("_TtC15ICNFCCardReader14AnimatedButton")
@interface AnimatedButton : AnimatedControl
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic) UIAccessibilityTraits accessibilityTraits;
- (BOOL)beginTrackingWithTouch:(UITouch * _Nonnull)touch withEvent:(UIEvent * _Nullable)event SWIFT_WARN_UNUSED_RESULT;
- (void)endTrackingWithTouch:(UITouch * _Nullable)touch withEvent:(UIEvent * _Nullable)event;
@end



/// An interactive switch with an ‘On’ and ‘Off’ state. When the user taps on the
/// switch the state is toggled and the appropriate animation is played.
/// Both the ‘On’ and ‘Off’ have an animation play range associated with their state.
SWIFT_CLASS("_TtC15ICNFCCardReader14AnimatedSwitch")
@interface AnimatedSwitch : AnimatedControl
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic) UIAccessibilityTraits accessibilityTraits;
- (void)endTrackingWithTouch:(UITouch * _Nullable)touch withEvent:(UIEvent * _Nullable)event;
@end


/// A view that can be added to a keypath of an AnimationView
SWIFT_CLASS("_TtC15ICNFCCardReader16AnimationSubview")
@interface AnimationSubview : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


/// The base view for <code>AnimationView</code> on iOS, tvOS, watchOS, and macCatalyst.
/// Enables the <code>AnimationView</code> implementation to be shared across platforms.
SWIFT_CLASS("_TtC15ICNFCCardReader17AnimationViewBase")
@interface AnimationViewBase : UIView
@property (nonatomic) UIViewContentMode contentMode;
- (void)didMoveToWindow;
- (void)layoutSubviews;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


IB_DESIGNABLE
SWIFT_CLASS("_TtC15ICNFCCardReader13AnimationView")
@interface AnimationView : AnimationViewBase
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, readonly) CGSize intrinsicContentSize;
@end

























@class NSString;
@class NSBundle;

/// An Objective-C compatible wrapper around Lottie’s Animation class.
/// Use in tandem with CompatibleAnimationView when using Lottie in Objective-C
SWIFT_CLASS("_TtC15ICNFCCardReader19CompatibleAnimation")
@interface CompatibleAnimation : NSObject
- (nonnull instancetype)initWithName:(NSString * _Nonnull)name bundle:(NSBundle * _Nonnull)bundle OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// An Objective-C compatible wrapper around Lottie’s AnimationKeypath
SWIFT_CLASS("_TtC15ICNFCCardReader26CompatibleAnimationKeypath")
@interface CompatibleAnimationKeypath : NSObject
/// Creates a keypath from a dot separated string. The string is separated by “.”
- (nonnull instancetype)initWithKeypath:(NSString * _Nonnull)keypath OBJC_DESIGNATED_INITIALIZER;
/// Creates a keypath from a list of strings.
- (nonnull instancetype)initWithKeys:(NSArray<NSString *> * _Nonnull)keys OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class UIColor;

/// An Objective-C compatible wrapper around Lottie’s AnimationView.
SWIFT_CLASS("_TtC15ICNFCCardReader23CompatibleAnimationView")
@interface CompatibleAnimationView : UIView
- (nonnull instancetype)initWithCompatibleAnimation:(CompatibleAnimation * _Nonnull)compatibleAnimation OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)_ SWIFT_UNAVAILABLE;
@property (nonatomic, strong) CompatibleAnimation * _Nullable compatibleAnimation;
@property (nonatomic) CGFloat loopAnimationCount;
@property (nonatomic) UIViewContentMode contentMode;
@property (nonatomic) BOOL shouldRasterizeWhenIdle;
@property (nonatomic) CGFloat currentProgress;
@property (nonatomic) NSTimeInterval currentTime;
@property (nonatomic) CGFloat currentFrame;
@property (nonatomic, readonly) CGFloat realtimeAnimationFrame;
@property (nonatomic, readonly) CGFloat realtimeAnimationProgress;
@property (nonatomic) CGFloat animationSpeed;
@property (nonatomic) BOOL respectAnimationFrameRate;
@property (nonatomic, readonly) BOOL isAnimationPlaying;
- (void)play;
- (void)playWithCompletion:(void (^ _Nullable)(BOOL))completion;
- (void)playFromProgress:(CGFloat)fromProgress toProgress:(CGFloat)toProgress completion:(void (^ _Nullable)(BOOL))completion;
- (void)playFromFrame:(CGFloat)fromFrame toFrame:(CGFloat)toFrame completion:(void (^ _Nullable)(BOOL))completion;
- (void)playFromMarker:(NSString * _Nonnull)fromMarker toMarker:(NSString * _Nonnull)toMarker completion:(void (^ _Nullable)(BOOL))completion;
- (void)stop;
- (void)pause;
- (void)reloadImages;
- (void)forceDisplayUpdate;
- (id _Nullable)getValueFor:(CompatibleAnimationKeypath * _Nonnull)keypath atFrame:(CGFloat)atFrame SWIFT_WARN_UNUSED_RESULT;
- (void)logHierarchyKeypaths;
- (void)setColorValue:(UIColor * _Nonnull)color forKeypath:(CompatibleAnimationKeypath * _Nonnull)keypath;
- (UIColor * _Nullable)getColorValueFor:(CompatibleAnimationKeypath * _Nonnull)keypath atFrame:(CGFloat)atFrame SWIFT_WARN_UNUSED_RESULT;
- (void)addSubview:(AnimationSubview * _Nonnull)subview forLayerAt:(CompatibleAnimationKeypath * _Nonnull)keypath;
- (CGRect)convertWithRect:(CGRect)rect toLayerAt:(CompatibleAnimationKeypath * _Nullable)keypath SWIFT_WARN_UNUSED_RESULT;
- (CGPoint)convertWithPoint:(CGPoint)point toLayerAt:(CompatibleAnimationKeypath * _Nullable)keypath SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)progressTimeForMarker:(NSString * _Nonnull)named SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)frameTimeForMarker:(NSString * _Nonnull)named SWIFT_WARN_UNUSED_RESULT;
@end


@class UIImage;

SWIFT_PROTOCOL("_TtP15ICNFCCardReader24ICMRZScannerCodeDelegate_")
@protocol ICMRZScannerCodeDelegate
/// Phương thức được gọi sau khi người dùng nhấn vào nút Đóng màn hình
/// Tham số ‘isStepScan’ xác định màn hình nào thực hiện việc đóng SDK khi quét mã MRZ
/// true - màn hình quét mã MRZ tương ứng [ICNFCLastStep] là [ICNFCHelpMRZCode]
/// false - màn hình hướng dẫn quét mã MRZ tương ứng [ICNFCLastStep] là [ICNFCScanMRZCode]
- (void)icMRZScannerCodeDismissedWithIsStepScan:(BOOL)isStepScan;
/// Phương thức được gọi sau khi đọc thông tin MRZ thành công
/// Tham số ‘idNumber’ là thông tin bóc tách chuỗi MRZ
/// Tham số ‘birthDate’ là thông tin bóc tách chuỗi MRZ
/// Tham số ‘expiryDate’ là thông tin bóc tách chuỗi MRZ
/// Tham số ‘backImage’ là ảnh mặt sau.
/// Tham số ‘cropParams’ là thông tin dữ liệu nguyên gốc, kiểu Dictionary được trả ra sau khi đọc thông tin NFC thành công.
- (void)icMRZScannerCodeCompletedWithIdNumber:(NSString * _Nonnull)idNumber birthDate:(NSString * _Nonnull)birthDate expiryDate:(NSString * _Nonnull)expiryDate backImage:(UIImage * _Nonnull)backImage cropImage:(UIImage * _Nonnull)cropImage;
@end


SWIFT_CLASS("_TtC15ICNFCCardReader30ICMRZScannerCodeViewController") SWIFT_AVAILABILITY(ios,introduced=13.0)
@interface ICMRZScannerCodeViewController : ICNFCBaseViewController
@property (nonatomic, weak) id <ICMRZScannerCodeDelegate> _Nullable scanMRZCodeDelegate;
@property (nonatomic, copy) NSString * _Nonnull languageApplication;
@property (nonatomic) BOOL isShowTutorial;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
- (void)viewDidDisappear:(BOOL)animated;
- (void)viewWillLayoutSubviews;
- (void)viewDidLayoutSubviews;
- (void)deallocCameraSession;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end



SWIFT_AVAILABILITY(ios,introduced=13.0)
@interface ICMRZScannerCodeViewController (SWIFT_EXTENSION(ICNFCCardReader)) <ICNFCHelpImageDelegate>
- (void)icNFCHelpImageGotIt;
- (void)icNFCHelpImageDismissed;
@end


SWIFT_AVAILABILITY(ios,introduced=13.0)
@interface ICMRZScannerCodeViewController (SWIFT_EXTENSION(ICNFCCardReader)) <ICPopupCloseSdkDelegate>
/// Phương thức DELEGATE được thực hiện khi người dùng nhấn nút CÓ (bên trái) ở màn hình Cảnh báo đóng SDK
/// → Thực hiện đóng SDK
- (void)icPopupCloseSdkPressedLeft;
/// Phương thức DELEGATE được thực hiện khi người dùng nhấn nút KHÔNG (bên phải) ở màn hình Cảnh báo đóng SDK
/// → Thực hiện khởi động lại máy ảnh
- (void)icPopupCloseSdkPressedRight;
@end


SWIFT_AVAILABILITY(ios,introduced=13.0)
@interface ICMRZScannerCodeViewController (SWIFT_EXTENSION(ICNFCCardReader)) <ICPopupPermissionCameraDelegate>
/// Phương thức DELEGATE được thực hiện khi người dùng nhấn nút KHÔNG (bên trái) ở màn hình Xin quyền camera
/// → Thực hiện đóng SDK
- (void)icPopupPermissionCameraPressedLeft;
/// Phương thức DELEGATE được thực hiện khi người dùng nhấn nút CÀI ĐẶT (bên phải) ở màn hình Xin quyền camera
/// → Thực hiện mở cài đặt
- (void)icPopupPermissionCameraPressedRight;
@end



SWIFT_CLASS("_TtC15ICNFCCardReader13ICNFCConstant")
@interface ICNFCConstant : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull FontRegular;)
+ (NSString * _Nonnull)FontRegular SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull FontMedium;)
+ (NSString * _Nonnull)FontMedium SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull FontBold;)
+ (NSString * _Nonnull)FontBold SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BOOL IsIpad;)
+ (BOOL)IsIpad SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@protocol ICNFCQRCodeScannerViewDelegate;
@class AVCaptureSession;
@class AVCaptureVideoPreviewLayer;

SWIFT_CLASS("_TtC15ICNFCCardReader22ICNFCQRCodeScannerView")
@interface ICNFCQRCodeScannerView : UIView
@property (nonatomic, weak) id <ICNFCQRCodeScannerViewDelegate> _Nullable delegate;
@property (nonatomic, strong) AVCaptureSession * _Null_unspecified captureSession;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) Class _Nonnull layerClass;)
+ (Class _Nonnull)layerClass SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, strong) AVCaptureVideoPreviewLayer * _Nonnull layer;
- (void)layoutSubviews;
@end

@class AVCaptureMetadataOutput;
@class AVMetadataObject;
@class AVCaptureConnection;

@interface ICNFCQRCodeScannerView (SWIFT_EXTENSION(ICNFCCardReader)) <AVCaptureMetadataOutputObjectsDelegate>
- (void)captureOutput:(AVCaptureMetadataOutput * _Nonnull)output didOutputMetadataObjects:(NSArray<AVMetadataObject *> * _Nonnull)metadataObjects fromConnection:(AVCaptureConnection * _Nonnull)connection;
@end

@class AVCaptureOutput;

@interface ICNFCQRCodeScannerView (SWIFT_EXTENSION(ICNFCCardReader)) <AVCaptureVideoDataOutputSampleBufferDelegate>
- (void)captureOutput:(AVCaptureOutput * _Nonnull)output didOutputSampleBuffer:(CMSampleBufferRef _Nonnull)sampleBuffer fromConnection:(AVCaptureConnection * _Nonnull)connection;
@end


@interface ICNFCQRCodeScannerView (SWIFT_EXTENSION(ICNFCCardReader))
@property (nonatomic, readonly) BOOL isSessionRunning;
- (void)startScanning;
- (void)stopScanning;
- (void)resetDataToRescan;
- (void)removeInputOutput;
- (void)deallocSession;
- (void)doInitialSetupWithScanRect:(CGRect)scanRect;
@end


SWIFT_PROTOCOL("_TtP15ICNFCCardReader30ICNFCQRCodeScannerViewDelegate_")
@protocol ICNFCQRCodeScannerViewDelegate
- (void)qrScanningDidFail;
- (void)qrScanningSucceededWithImage:(UIImage * _Nonnull)image value:(NSString * _Nonnull)value;
- (void)qrScanningDidStop;
@end


SWIFT_PROTOCOL("_TtP15ICNFCCardReader23ICNFCReaderChipDelegate_")
@protocol ICNFCReaderChipDelegate
/// Phương thức được gọi sau khi người dùng nhấn vào nút Đóng màn hình
- (void)icNFCReaderChipDismissed;
/// Phương thức được gọi sau khi đọc thông tin NFC thành công
/// Tham số ‘avatar’ là ảnh chân dung được in ở mặt trước thẻ CCGC
/// Tham số ‘informationDetails’ là thông tin cá nhân, kiểu Dictionary được trả ra sau khi đọc thông tin NFC thành công.
/// Tham số ‘dataGroups’ là thông tin dữ liệu nguyên gốc, kiểu Dictionary được trả ra sau khi đọc thông tin NFC thành công.
- (void)icNFCReaderChipCompletedWithAvatar:(UIImage * _Nonnull)avatar informationDetails:(NSDictionary<NSString *, NSString *> * _Nonnull)informationDetails dataGroups:(NSDictionary<NSString *, NSString *> * _Nonnull)dataGroups chipAuthentication:(ICNFCAuthenticationStatus)chipAuthentication activeAuthentication:(ICNFCAuthenticationStatus)activeAuthentication;
/// Phương thức được gọi sau khi lấy được trạng thái đọc thẻ
/// Tham số <code>state</code> là trạng thái đọc thẻ
/// Tham số <code>progress</code> là giá trị quá trình hiện tại
/// Tham số <code>error</code> là miêu tả lỗi (nếu có)
/// Tham số <code>logError</code> là lỗi để gửi log lên server
- (void)icNFCReadingChipWithState:(ICNFCReaderState)state progress:(NSInteger)progress error:(NSString * _Nonnull)error logError:(NSDictionary<NSString *, NSString *> * _Nonnull)logError;
/// Phương thức được gọi khi popup đọc NFC đã tắt
- (void)icNFCPopupReaderChipDisappear;
@end


SWIFT_CLASS("_TtC15ICNFCCardReader29ICNFCReaderChipViewController") SWIFT_AVAILABILITY(ios,introduced=13.0)
@interface ICNFCReaderChipViewController : ICNFCBaseViewController
@property (nonatomic, strong) id <ICNFCReaderChipDelegate> _Nullable delegate;
@property (nonatomic) BOOL isShowTutorial;
@property (nonatomic) BOOL isEnableGotIt;
@property (nonatomic) CardReaderStep cardReaderStep;
@property (nonatomic, copy) NSString * _Nonnull idNumber;
@property (nonatomic, copy) NSString * _Nonnull birthDate;
@property (nonatomic, copy) NSString * _Nonnull expiryDate;
@property (nonatomic, copy) NSString * _Nonnull nameVideoHelpNFC;
@property (nonatomic, copy) NSString * _Nonnull nameAnimationStatus;
@property (nonatomic, copy) NSArray<NSNumber *> * _Nullable readingTagsNFC;
@property (nonatomic) BOOL isActiveAuthentication;
@property (nonatomic) BOOL isChipAuthentication;
@property (nonatomic) BOOL isStartNFCReaderOutSide;
@property (nonatomic, copy) NSString * _Nonnull textReadyNFC;
@property (nonatomic, copy) NSString * _Nonnull textScanningNFC;
@property (nonatomic, copy) NSString * _Nonnull textFinishNFC;
@property (nonatomic, copy) NSString * _Nonnull textDetectedNFC;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
- (void)viewDidDisappear:(BOOL)animated;
- (void)viewWillLayoutSubviews;
- (void)viewDidLayoutSubviews;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end



SWIFT_AVAILABILITY(ios,introduced=13.0)
@interface ICNFCReaderChipViewController (SWIFT_EXTENSION(ICNFCCardReader)) <ICNFCHelpFullScreenVideosDelegate>
/// Phương thức DELEGATE của ICNFCHelpFullScreenVideosDelegate
/// được thực hiện khi người dùng nhấn nút BỎ QUA HƯỚNG DẪN ở màn hình Hướng dẫn
/// → Thực hiện đọc thông tin thẻ căn cước
- (void)icNFCHelpFullScreenVideosGotIt;
@end


SWIFT_AVAILABILITY(ios,introduced=13.0)
@interface ICNFCReaderChipViewController (SWIFT_EXTENSION(ICNFCCardReader)) <ICPopupCloseSdkDelegate>
/// Phương thức DELEGATE được thực hiện khi người dùng nhấn nút CÓ (bên trái) ở màn hình Cảnh báo đóng SDK
/// → Thực hiện đóng SDK
- (void)icPopupCloseSdkPressedLeft;
/// Phương thức DELEGATE được thực hiện khi người dùng nhấn nút KHÔNG (bên phải) ở màn hình Cảnh báo đóng SDK
- (void)icPopupCloseSdkPressedRight;
@end


SWIFT_AVAILABILITY(ios,introduced=13.0)
@interface ICNFCReaderChipViewController (SWIFT_EXTENSION(ICNFCCardReader))
/// Phương thức được gọi từ màn hình chính [ICMainNFCReaderViewController]
/// Thực hiện BẮT ĐẦU chạy hiệu ứng
- (void)startIndicatorView;
/// Phương thức được gọi từ màn hình chính [ICMainNFCReaderViewController]
/// Thực hiện DỪNG chạy hiệu ứng
- (void)stopIndicatorView;
/// Phương thức được gọi từ màn hình chính [ICMainNFCReaderViewController]
/// Thực hiện QUÉT thông tin thẻ căn cước không sử dụng giao diện
- (void)readOnlySpecificDataOutSide;
- (void)deallocSessionReaderChipNFC;
@end







SWIFT_CLASS("_TtC15ICNFCCardReader14PassportReader") SWIFT_AVAILABILITY(ios,introduced=13)
@interface PassportReader : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end




IB_DESIGNABLE
SWIFT_CLASS("_TtC15ICNFCCardReader16QKMRZScannerView") SWIFT_AVAILABILITY(ios,introduced=13.0)
@interface QKMRZScannerView : UIView
@property (nonatomic) BOOL isScanning;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)prepareForInterfaceBuilder;
- (void)layoutSubviews;
- (void)startScanning;
- (void)stopScanning;
@property (nonatomic, readonly) BOOL isSessionRunning;
- (void)removeInputOutput;
- (void)deallocSession;
@end


SWIFT_AVAILABILITY(ios,introduced=13.0)
@interface QKMRZScannerView (SWIFT_EXTENSION(ICNFCCardReader)) <AVCaptureVideoDataOutputSampleBufferDelegate>
- (void)captureOutput:(AVCaptureOutput * _Nonnull)output didOutputSampleBuffer:(CMSampleBufferRef _Nonnull)sampleBuffer fromConnection:(AVCaptureConnection * _Nonnull)connection;
@end





@class NSNumber;

@interface UIView (SWIFT_EXTENSION(ICNFCCardReader))
- (void)applyGradientWith:(NSArray<UIColor *> * _Nonnull)colours locations:(NSArray<NSNumber *> * _Nullable)locations size:(CGSize)size;
- (void)setGradientWith:(NSArray<UIColor *> * _Nonnull)colours size:(CGSize)size cornerRadius:(CGFloat)cornerRadius;
@end

#endif
#if defined(__cplusplus)
#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
